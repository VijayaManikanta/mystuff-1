$OpenBSD$

Fix NULL memory allocation when EINA_DEFAULT_MEMPOOL is use.

--- src/lib/include/evas_private.h.orig	Sun Oct 30 17:01:29 2011
+++ src/lib/include/evas_private.h	Tue Nov  1 18:11:47 2011
@@ -1040,7 +1040,7 @@ void _evas_touch_point_remove(Evas *e, int id);
 /********************/
 #define MPOOL 1
 
-#ifdef MPOOL 
+#ifdef MPOOL
 typedef struct _Evas_Mempool Evas_Mempool;
 
 struct _Evas_Mempool
@@ -1050,12 +1050,24 @@ struct _Evas_Mempool
   int           num_frees;
   Eina_Mempool *mp;
 };
+
+# ifdef EINA_DEFAULT_MEMPOOL
+# define EVAS_DEFAULT_MEMPOOL "pass_through"
+# else
+# define EVAS_DEFAULT_MEMPOOL "chained_mempool"
+# endif
+
 # define EVAS_MEMPOOL(x) \
    static Evas_Mempool x = {0, 0, 0, NULL}
 # define EVAS_MEMPOOL_INIT(x, nam, siz, cnt, ret) \
    do { \
+     const char *_choice, *_tmp; \
+     _choice = EVAS_DEFAULT_MEMPOOL; \
+     _tmp = getenv("EINA_MEMPOOL"); \
+     if (_tmp && _tmp[0]) \
+       _choice = _tmp; \
      if (!x.mp) { \
-       x.mp = eina_mempool_add("chained_mempool", nam, NULL, sizeof(siz), cnt); \
+       x.mp = eina_mempool_add(_choice, nam, NULL, sizeof(siz), cnt); \
        if (!x.mp) { \
          return ret; \
        } \
